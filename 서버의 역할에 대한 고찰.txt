서버의 역할: 데이터 동기화, 알림기능 지원
사용자는 로그인을 통해 데이터를 동기화 한다.
하나의 기기에서 데이터가 바뀌면 다른 기기에 이를 반영한다. firebase로 될까?
데이터 저장 없이 단순한 동기화 기능만 지원한다면 전체 데이터를 저장할 필요가 없기 때문에 알림기능의 지원이 힘들어진다?
전체 데이터 저장은 신규 기기의 연결이 있을 수 있고 클라이언트의 데이터가 지워지는 상황도 발생할 수 있기 때문에 필요하다.

-동기화 방법
로그를 이용해 동기화한다.

모든 기기는 저마다 데이터를 보유하고 있다.
그 데이터를 수정할 때마다 서버로 어느부분을 어떻게 수정했는지 로그를 보낸다.
로그를 받은 서버는 DB에 로그를 저장하고 데이터에 수정 사항을 반영한다.

로그는 생성 시간(초단위 UTC), 액션(CUD), 수정 부분(프로젝트 id | 할일그룹 id | 할일 id), 수정 값
예시-
프로젝트 생성: 시간, C, none, 프로젝트 데이터 // 새 프로젝트 생성
할 일 체크: 시간, U, [0,0,3], true // 0번 프로젝트의 0번 그룹의 3번 할 일 체크
프로젝트 수정: 시간, U, [0], 수정된 데이터 // 0번 프로젝트 수정
프로젝트 삭제: 시간, D, [0] // 0번 프로젝트 삭제
*액션대신 메시지를 사용할 것. 예시: prj_del(프로젝트 삭제), prj_cre(프로젝트 생성)

기기는 자격 증명 시 자신의 마지막 동기화 시간을 같이 보낸다.
서버는 그 시간 이후의 로그를 기기에게 전달한다.
시간은 서버에서 생성한다.
하루가 지난 후에 의미가 사라지는 로그(할 일 체크 등)는 삭제한다.
마지막 동기화 시간은 세션에 저장? 로컬스토리지에 저장?
세션에 저장 시 세션이 만료되면 마지막 동기화 시간을 특정할 수 없어 로그의 어느부분 부터 보내야 할 지 알 수 없다.
로컬에 저장 시 시간 조작의 위험이 있다. 데이터도 로컬에 저장하는 마당에 이걸 걱정할 필요가 있나?
그냥 세션이 만료된 기기에 대해선 해시값을 이용해 동기화 하자. 그리고 할 일 체크를 제외한 로그는 3일이 지나면 삭제하는 걸로 하자. 그렇게 되면 세션 기간을 3일로 늘려야한다.
*데이터의 해시값은 체크 여부를 false로 통일한 후 계산한다.

기기 감지는 어떻게 할까?
로컬 스토리지에 기기의 넘버를 저장한다.
기기를 감지할 필요가 있을까?
그냥 자신의 마지막 동기화 시간을 보내기만 하면 된다. 기기가 무슨 상관이 있는가?



로그를 이용한 동기화 말고 다른 방법도 찾아보자.

데이터를 서버에만 저장하고 자격 증명할 때마다 데이터 받아오기.
이건 오고가는 데이터 양이 많아질까봐 걱정이다.
로그관리 안해도 돼서 좋긴하다.

데이터의 해시값을 이용해 동기화한다.
기기의 데이터 해시값과 서버의 데이터 해시값이 다르면 동기화 시간을 비교해서 더 최근에 생성된 데이터로 교체한다.
해시값의 이동은 서버와 통신하는 모든 순간에 이루어진다.

할 일 체크에 대한 로그만 저장한다. 그리고 하루가 지나면 로그를 삭제한다.

-동기화 정리
로그를 이용해 동기화한다.
